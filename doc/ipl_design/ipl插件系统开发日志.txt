2018-01-18
1.IPlatform初步完成，服务注册部分没有内存问题

2.ILogger 没有实现对象

3.IObject和IProperty没有检查内存问题


2018-01-22
1.IGeometryTransform 初步实现
  测试发现IPlatform还有内存问题   iplObjDescMap 析构时


2018-01-27
内存管理问题
1. 插件内部创建，外部使用，外外部用智能指针管理，调用者负责释放
   virtual ISFVectorSourceReader *OpenSFFile(const iplChar *filename, bool bUpdate) = 0;

2. 插件内部引用外部创建的指针，但插件内部不保存备份，直接传递const *

3. 插件内部引用外部创建的指针，但需要保存指针备份，以便延时处理，需要传递智能指针，发生所有权转移


2018-02-07
处理链和简单执行器的选择
处理链和简单执行器的比较：
处理链和执行器的设计目的都是为了方便算法集成和执行，但各有侧重。
处理链是内存中的处理流程，中间结果不落盘，侧重逻辑连续；
执行器侧重实现与硬件资源相关的加速功能。采用文件分块的方式，更容易设计通用加速算法。

1. 哪种方式更适合潜在的应用模式？
执行器：应用程序开发者需要知道处理流程
        编程时需要硬编码处理过程，自己协调各执行器之间的输入输出

处理链：应用程序开发者需要知道处理流程
        需要编码将算法构成链
        处理链自动对输入输出接口进行链接
                

2. 处理链有无必要？
   可视化流程定制，对处理链和执行器都可以实现
   处理链更像是单机执行，因为难以进行通用加速
   处理器即可提供通用加速，也可通过插件扩展方式，实现针对特定算法的加速